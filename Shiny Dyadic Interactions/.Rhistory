shiny::runApp()
runApp()
runApp()
runApp()
install.packages("dashboardthemes")
library(dashboardthemes)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(ggplot2)
install.packages("extrafont")
library(extrafont)
font_install('fontcm')
library(latex2exp)
f <- rep(0, 6)
set.seed(1996)
r <- rnorm(6, 0, .1)
faclab <- list('1' = expression("Fixed-effects H"[0]),
'3' = expression("Random-effects H"[0]),
'2' = expression("Fixed-effects H"["a"]),
'4' = expression("Random-effects H"["a"]))
faclab_labeller <- function(variable,value){
return(faclab[value])
}
zero <- paste("mu ==", 0)
nzero <- paste("mu !=", 0)
df1 <- data.frame(x = f, y = 1:6)
df2 <- data.frame(x = f+0.35, y = 1:6)
df3 <- data.frame(x = r+0.35, y = 1:6)
df4 <- data.frame(x = r, y = 1:6)
p <- ggplot(df3, aes(x, y)) +
ylab("Study Effect Sizes") + xlab("") + ylim(c(0.5, 7)) +
theme_minimal() +
theme(text = element_text(size = 24, family = "serif"),
axis.text.y = element_blank(),,
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.ticks.x = element_line(size = 0.5),
axis.ticks.length.x = unit(.2, "cm"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
geom_segment(aes(x = 0.35, xend = 0.35, y = 0.5, yend = 6.5), colour = "grey") +
geom_segment(aes(x = -Inf, xend = -Inf, y = 0.5, yend = 6.5)) +
geom_segment(aes(x = -0.2, xend = 0.7, y = -Inf, yend = -Inf)) +
geom_point(size = 5, shape = 21, fill = "white" ) +
scale_x_continuous(breaks = seq(0, 0.5, 0.25)) +
annotate("text", label = nzero, x = 0.35, y = 7, parse = T, size = 6)
p
p <- ggplot(df3, aes(x, y)) +
ylab("Study Effect Sizes") + xlab("") + ylim(c(0.5, 7)) +
theme_minimal() +
theme(text = element_text(size = 24, family = "serif"),
axis.text.y = element_blank(),,
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.ticks.x = element_line(size = 0.5),
axis.ticks.length.x = unit(.2, "cm"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
geom_segment(aes(x = 0.35, xend = 0.35, y = 0.5, yend = 6.5), colour = "grey") +
geom_segment(aes(x = -Inf, xend = -Inf, y = 0.5, yend = 6.5)) +
geom_segment(aes(x = -0.2, xend = 0.7, y = -Inf, yend = -Inf)) +
geom_point(size = 5, shape = 21, fill = "white" ) +
scale_x_continuous(breaks = seq(0, 0.5, 0.25), name = expression("delta_i")) +
annotate("text", label = nzero, x = 0.35, y = 7, parse = T, size = 6)
p
p <- ggplot(df3, aes(x, y)) +
ylab("Study Effect Sizes") + xlab("") + ylim(c(0.5, 7)) +
theme_minimal() +
theme(text = element_text(size = 24, family = "serif"),
axis.text.y = element_blank(),,
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.ticks.x = element_line(size = 0.5),
axis.ticks.length.x = unit(.2, "cm"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
geom_segment(aes(x = 0.35, xend = 0.35, y = 0.5, yend = 6.5), colour = "grey") +
geom_segment(aes(x = -Inf, xend = -Inf, y = 0.5, yend = 6.5)) +
geom_segment(aes(x = -0.2, xend = 0.7, y = -Inf, yend = -Inf)) +
geom_point(size = 5, shape = 21, fill = "white" ) +
scale_x_continuous(breaks = seq(0, 0.5, 0.25), name = expression(delta[i])) +
annotate("text", label = nzero, x = 0.35, y = 7, parse = T, size = 6)
p
p <- ggplot(df3, aes(x, y)) +
ylab("Study Effect Sizes") + xlab("") + ylim(c(0.5, 7)) +
theme_minimal() +
theme(text = element_text(size = 24, family = "serif"),
axis.text.y = element_blank(),,
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.ticks.x = element_line(size = 0.5),
axis.ticks.length.x = unit(.2, "cm"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
geom_segment(aes(x = 0.35, xend = 0.35, y = 0.5, yend = 6.5), colour = "grey") +
geom_segment(aes(x = -Inf, xend = -Inf, y = 0.5, yend = 6.5)) +
geom_segment(aes(x = -0.2, xend = 0.7, y = -Inf, yend = -Inf)) +
geom_point(size = 5, shape = 21, fill = "white" ) +
scale_x_continuous(breaks = seq(0, 0.5, 0.25), name = italic(expression(delta[i]))) +
annotate("text", label = nzero, x = 0.35, y = 7, parse = T, size = 6)
p
p <- ggplot(df3, aes(x, y)) +
ylab("Study Effect Sizes") + xlab("") + ylim(c(0.5, 7)) +
theme_minimal() +
theme(text = element_text(size = 24, family = "serif"),
axis.text.y = element_blank(),,
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.ticks.x = element_line(size = 0.5),
axis.ticks.length.x = unit(.2, "cm"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
geom_segment(aes(x = 0.35, xend = 0.35, y = 0.5, yend = 6.5), colour = "grey") +
geom_segment(aes(x = -Inf, xend = -Inf, y = 0.5, yend = 6.5)) +
geom_segment(aes(x = -0.2, xend = 0.7, y = -Inf, yend = -Inf)) +
geom_point(size = 5, shape = 21, fill = "white" ) +
scale_x_continuous(breaks = seq(0, 0.5, 0.25), name = expression(italic(delta[i]))) +
annotate("text", label = nzero, x = 0.35, y = 7, parse = T, size = 6)
p
p <- ggplot(df3, aes(x, y)) +
ylab("Study Effect Sizes") + xlab("") + ylim(c(0.5, 7)) +
theme_minimal() +
theme(text = element_text(size = 24, family = "serif"),
axis.text.y = element_blank(),,
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.ticks.x = element_line(size = 0.5),
axis.ticks.length.x = unit(.2, "cm"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
geom_segment(aes(x = 0.35, xend = 0.35, y = 0.5, yend = 6.5), colour = "grey") +
geom_segment(aes(x = -Inf, xend = -Inf, y = 0.5, yend = 6.5)) +
geom_segment(aes(x = -0.2, xend = 0.7, y = -Inf, yend = -Inf)) +
geom_point(size = 5, shape = 21, fill = "white" ) +
scale_x_continuous(breaks = seq(0, 0.5, 0.25), name = expression(italic(delta)[italic(i)])) +
annotate("text", label = nzero, x = 0.35, y = 7, parse = T, size = 6)
p
p <- ggplot(df3, aes(x, y)) +
ylab("Study Effect Sizes") + xlab("") + ylim(c(0.5, 7)) +
theme_minimal() +
theme(text = element_text(size = 24, family = "serif"),
axis.text.y = element_blank(),,
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.ticks.x = element_line(size = 0.5),
axis.ticks.length.x = unit(.2, "cm"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
geom_segment(aes(x = 0.35, xend = 0.35, y = 0.5, yend = 6.5), colour = "grey") +
geom_segment(aes(x = -Inf, xend = -Inf, y = 0.5, yend = 6.5)) +
geom_segment(aes(x = -0.2, xend = 0.7, y = -Inf, yend = -Inf)) +
geom_point(size = 5, shape = 21, fill = "white" ) +
scale_x_continuous(breaks = seq(0, 0.5, 0.25), name = expression(italic(delta[i]))) +
annotate("text", label = nzero, x = 0.35, y = 7, parse = T, size = 6)
p
p <- ggplot(df2, aes(x, y)) +
ylab("Study Effect Sizes") + xlab("") + ylim(c(0.5, 7)) +
theme_minimal() +
theme(text = element_text(size = 24, family = "serif"),
axis.text.y = element_blank(),,
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.ticks.x = element_line(size = 0.5),
axis.ticks.length.x = unit(.2, "cm"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
geom_segment(aes(x = 0.35, xend = 0.35, y = 0.5, yend = 6.5), colour = "grey") +
geom_segment(aes(x = -Inf, xend = -Inf, y = 0.5, yend = 6.5)) +
geom_segment(aes(x = -0.2, xend = 0.7, y = -Inf, yend = -Inf)) +
geom_point(size = 5, shape = 21, fill = "white" ) +
scale_x_continuous(breaks = seq(0, 0.5, 0.25), name = expression(italic(delta[i]))) +
annotate("text", label = nzero, x = 0.35, y = 7, parse = T, size = 6)
p
ggsave("examplefixedrandomF1.png", plot = p, dpi = 1200)
setwd("~/")
ggsave("examplefixedrandomF1.png", plot = p, dpi = 1200)
p <- ggplot(df3, aes(x, y)) +
ylab("Study Effect Sizes") + xlab("") + ylim(c(0.5, 7)) +
theme_minimal() +
theme(text = element_text(size = 24, family = "serif"),
axis.text.y = element_blank(),,
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.ticks.x = element_line(size = 0.5),
axis.ticks.length.x = unit(.2, "cm"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
geom_segment(aes(x = 0.35, xend = 0.35, y = 0.5, yend = 6.5), colour = "grey") +
geom_segment(aes(x = -Inf, xend = -Inf, y = 0.5, yend = 6.5)) +
geom_segment(aes(x = -0.2, xend = 0.7, y = -Inf, yend = -Inf)) +
geom_point(size = 5, shape = 21, fill = "white" ) +
scale_x_continuous(breaks = seq(0, 0.5, 0.25), name = expression(italic(delta[i]))) +
annotate("text", label = nzero, x = 0.35, y = 7, parse = T, size = 6)
p
ggsave("examplefixedrandomR1.png", plot = p, dpi = 1200)
p <- ggplot(df4, aes(x, y)) +
ylab("Study Effect Sizes") + xlab("") + ylim(c(0.5, 7)) +
theme_minimal() +
theme(text = element_text(size = 24, family = "serif"),
axis.text.y = element_blank(),
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.ticks.x = element_line(size = 0.5),
axis.ticks.length.x = unit(.2, "cm"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
geom_segment(aes(x = 0, xend = 0, y = 0.5, yend = 6.5), colour = "grey") +
geom_segment(aes(x = -Inf, xend = -Inf, y = 0.5, yend = 6.5)) +
geom_segment(aes(x = -0.2, xend = 0.7, y = -Inf, yend = -Inf)) +
geom_point(size = 5, shape = 21, fill = "white" ) +
scale_x_continuous(breaks = seq(0, 0.5, 0.25)) +
annotate("text", label = zero, x = 0, y = 7, parse = T, size = 6)
p
p <- ggplot(df4, aes(x, y)) +
ylab("Study Effect Sizes") + xlab("") + ylim(c(0.5, 7)) +
theme_minimal() +
theme(text = element_text(size = 24, family = "serif"),
axis.text.y = element_blank(),
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.ticks.x = element_line(size = 0.5),
axis.ticks.length.x = unit(.2, "cm"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
geom_segment(aes(x = 0, xend = 0, y = 0.5, yend = 6.5), colour = "grey") +
geom_segment(aes(x = -Inf, xend = -Inf, y = 0.5, yend = 6.5)) +
geom_segment(aes(x = -0.2, xend = 0.7, y = -Inf, yend = -Inf)) +
geom_point(size = 5, shape = 21, fill = "white" ) +
scale_x_continuous(breaks = seq(0, 0.5, 0.25), name = expression(italic(delta[i]))) +
annotate("text", label = zero, x = 0, y = 7, parse = T, size = 6)
p
ggsave("examplefixedrandomR0.png", plot = p, dpi = 1200)
p <- ggplot(df1, aes(x, y)) +
ylab("Study Effect Sizes") + xlab("") + ylim(c(0.5, 7)) +
theme_minimal() +
theme(text = element_text(size = 24, family = "serif"),
axis.text.y = element_blank(),
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.ticks.x = element_line(size = 0.5),
axis.ticks.length.x = unit(.2, "cm"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
geom_segment(aes(x = 0, xend = 0, y = 0.5, yend = 6.5), colour = "grey") +
geom_segment(aes(x = -Inf, xend = -Inf, y = 0.5, yend = 6.5)) +
geom_segment(aes(x = -0.2, xend = 0.7, y = -Inf, yend = -Inf)) +
geom_point(size = 5, shape = 21, fill = "white" ) +
scale_x_continuous(breaks = seq(0, 0.5, 0.25), name = expression(italic(delta[i]))) +
annotate("text", label = zero, x = 0, y = 7, parse = T, size = 6)
p
ggsave("examplefixedrandomF0.png", plot = p, dpi = 1200)
ggsave("examplefixedrandomF0.png", plot = p, dpi = 1200)
ggsave("examplefixedrandomF0.png", plot = p, dpi = 1200)
ggsave("examplefixedrandomF0.png", plot = p, dpi = 1200)
p <- ggplot(df4, aes(x, y)) +
ylab("Study Effect Sizes") + xlab("") + ylim(c(0.5, 7)) +
theme_minimal() +
theme(text = element_text(size = 24, family = "serif"),
axis.text.y = element_blank(),
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.ticks.x = element_line(size = 0.5),
axis.ticks.length.x = unit(.2, "cm"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
geom_segment(aes(x = 0, xend = 0, y = 0.5, yend = 6.5), colour = "grey") +
geom_segment(aes(x = -Inf, xend = -Inf, y = 0.5, yend = 6.5)) +
geom_segment(aes(x = -0.2, xend = 0.7, y = -Inf, yend = -Inf)) +
geom_point(size = 5, shape = 21, fill = "white" ) +
scale_x_continuous(breaks = seq(0, 0.5, 0.25), name = expression(italic(delta[i]))) +
annotate("text", label = zero, x = 0, y = 7, parse = T, size = 6)
p
ggsave("examplefixedrandomR0.png", plot = p, dpi = 1200)
p <- ggplot(df3, aes(x, y)) +
ylab("Study Effect Sizes") + xlab("") + ylim(c(0.5, 7)) +
theme_minimal() +
theme(text = element_text(size = 24, family = "serif"),
axis.text.y = element_blank(),,
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.ticks.x = element_line(size = 0.5),
axis.ticks.length.x = unit(.2, "cm"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
geom_segment(aes(x = 0.35, xend = 0.35, y = 0.5, yend = 6.5), colour = "grey") +
geom_segment(aes(x = -Inf, xend = -Inf, y = 0.5, yend = 6.5)) +
geom_segment(aes(x = -0.2, xend = 0.7, y = -Inf, yend = -Inf)) +
geom_point(size = 5, shape = 21, fill = "white" ) +
scale_x_continuous(breaks = seq(0, 0.5, 0.25), name = expression(italic(delta[i]))) +
annotate("text", label = nzero, x = 0.35, y = 7, parse = T, size = 6)
p
ggsave("examplefixedrandomR1.png", plot = p, dpi = 1200)
p <- ggplot(df2, aes(x, y)) +
ylab("Study Effect Sizes") + xlab("") + ylim(c(0.5, 7)) +
theme_minimal() +
theme(text = element_text(size = 24, family = "serif"),
axis.text.y = element_blank(),,
axis.text.x = element_text(margin = margin(5, 0, 0, 0)),
axis.ticks.x = element_line(size = 0.5),
axis.ticks.length.x = unit(.2, "cm"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
geom_segment(aes(x = 0.35, xend = 0.35, y = 0.5, yend = 6.5), colour = "grey") +
geom_segment(aes(x = -Inf, xend = -Inf, y = 0.5, yend = 6.5)) +
geom_segment(aes(x = -0.2, xend = 0.7, y = -Inf, yend = -Inf)) +
geom_point(size = 5, shape = 21, fill = "white" ) +
scale_x_continuous(breaks = seq(0, 0.5, 0.25), name = expression(italic(delta[i]))) +
annotate("text", label = nzero, x = 0.35, y = 7, parse = T, size = 6)
p
ggsave("examplefixedrandomF1.png", plot = p, dpi = 1200)
setwd("C:/Users/Berkh011/OneDrive - Universiteit Utrecht/Interpersonal Interactions/Shiny Dyadic Interactions")
runApp()
load("modelfunctions.R")
source("modelfunctions.R")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(ggplot2)
n=50
gender = rbinom(n,1,0.5)
error = rnorm(n,0,5)
Perfectionism= 46.212 + 9.403*gender + error
dat=data.frame(as.factor(gender),Perfectionism)
plt = ggplot()+geom_point(data=dat,aes(x=gender,y=Perfectionism, color=as.factor(gender))
,show.legend=FALSE, size=2)+ scale_color_manual(values=c("blue", "hotpink"))
plt2=plt + geom_smooth(data=dat,aes(x=gender,y=Perfectionism),size=1,color="black", show.legend=FALSE,method=lm,se=FALSE)
plt
plt2
plt2 + theme_bw()
plt2 + theme_classic()
plt2 + theme_classic() + xlab("Gender")
plt2 + theme_classic() + xlab("Gender") + scale_x_discrete(breaks = c(0, 1))
plt2 + theme_classic() + xlab("Gender") + scale_x_discrete(breaks = c(0, 1), values = c(0, 1))
plt2 + theme_classic() + xlab("Gender") + scale_x_discrete(breaks = c(0, 1), labels = c(0, 1))
plt2 + theme_classic() + xlab("Gender") + scale_x_discrete(breaks = c(0, 1))
plt2 + theme_classic() + xlab("Gender") + scale_x_discrete(breaks = c(0, 1), labels = c("Male", "Female"))
plt2 + theme_minimal() + xlab("Gender") + scale_x_discrete(breaks = c(0, 1), labels = c("Male", "Female"))
plt2 + xlab("Gender") + scale_x_discrete(breaks = c(0, 1), labels = c("Male", "Female"))
plt = ggplot()+geom_point(data=dat,aes(x=factor(gender),y=Perfectionism, color=as.factor(gender))
,show.legend=FALSE, size=2)+ scale_color_manual(values=c("blue", "hotpink"))
plt2=plt + geom_smooth(data=dat,aes(x=gender,y=Perfectionism),size=1,color="black", show.legend=FALSE,method=lm,se=FALSE)
plt2 + theme_classic() + xlab("Gender") + scale_x_discrete(breaks = c(0, 1), labels = c("Male", "Female"))
plt2 + theme_classic() + xlab("Gender") + scale_x_discrete(breaks = c(0, 1))
plt = ggplot()+geom_point(data=dat,aes(x=factor(gender),y=Perfectionism, color=as.factor(gender))
,show.legend=FALSE, size=2)+ scale_color_manual(values=c("blue", "hotpink"))
plt
plt2=plt + geom_smooth(data=dat,aes(x=factor(gender),y=Perfectionism),size=1,color="black", show.legend=FALSE,method=lm,se=FALSE)
plt
plt2 + theme_classic() + xlab("Gender") + scale_x_discrete(breaks = c(0, 1))
plt2=plt + geom_smooth(data=dat,aes(x=factor(gender),y=Perfectionism),size=1,color="black", show.legend=FALSE,method=lm,se=FALSE)
plt2 + theme_classic() + xlab("Gender") + scale_x_discrete(breaks = c(0, 1))
plt2=plt + geom_smooth(data=dat,aes(x=gender,y=Perfectionism),size=1,color="black", show.legend=FALSE,method=lm,se=FALSE)
plt2 + theme_classic() + xlab("Gender") + scale_x_discrete(breaks = c(0, 1))
plt = ggplot()+geom_point(data=dat,aes(x=as.factor(gender),y=Perfectionism, color=as.factor(gender))
,show.legend=FALSE, size=2)+ scale_color_manual(values=c("blue", "hotpink"))
plt2=plt + geom_smooth(data=dat,aes(x=gender,y=Perfectionism),size=1,color="black", show.legend=FALSE,method=lm,se=FALSE)
plt
plt2 + theme_classic() + xlab("Gender") + scale_x_discrete(breaks = c(0, 1))
plt2=plt + geom_smooth(data=dat,aes(x=as.factor(gender),y=Perfectionism),size=1,color="black", show.legend=FALSE,method=lm,se=FALSE)
plt
plt2 + theme_classic() + xlab("Gender") + scale_x_discrete(breaks = c(0, 1))
plt = ggplot()+geom_point(data=dat,aes(x=gender,y=Perfectionism, color=as.factor(gender))
,show.legend=FALSE, size=2)+ scale_color_manual(values=c("blue", "hotpink"))
plt2=plt + geom_smooth(data=dat,aes(x=gender,y=Perfectionism),size=1,color="black", show.legend=FALSE,method=lm,se=FALSE)
plt2 + theme_classic() + xlab("Gender") + scale_x_discrete(breaks = c(0, 1))
plt2 + theme_classic() + xlab("Gender") + scale_x_continuous(breaks = c(0, 1))
plt2 + theme_classic() + xlab("Gender") + scale_x_continuous(breaks = c(0, 1)) + xlim(c(-0.5, 0.5))
plt2 + theme_classic() + xlab("Gender") + scale_x_continuous(breaks = c(0, 1)) + xlim(c(-0.5, 1.5))
plt2 + theme_classic() + xlab("Gender") + scale_x_continuous(breaks = c(0, 1)) + xlim(c(-0.2, 1.2))
plt2 + theme_classic() + xlab("Gender") + scale_x_continuous(breaks = c(0, 1))
plt2 + theme_classic() + xlab("Gender") + xlim(c(-0.2, 1.2)) + scale_x_continuous(breaks = c(0, 1))
plt2 + theme_classic() + xlab("Gender") + scale_x_continuous(breaks = c(0, 1), limits = c(-0.2, 1.2))
ggsave("exampleregression.png", path = "\Users/Berkh011/OneDrive - Universiteit Utrecht/ARMS/")
ggsave("exampleregression.png", path = "/Users/Berkh011/OneDrive - Universiteit Utrecht/ARMS/")
runApp()
runApp()
runApp()
runApp()
library(tidyverse)
plot(1:5, 1:5)
runApp()
1:100 * 2
runApp()
dat() <- dat
runApp()
runApp()
runApp()
